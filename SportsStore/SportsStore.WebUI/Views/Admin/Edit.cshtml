@model SportsStore.Domain.Entities.Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit","Admin"))
{
    @Html.AntiForgeryToken()
    
    <div class="panel-body">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProductId)
        @foreach(var property in ViewData.ModelMetadata.Properties)
        {

            if(property.PropertyName!= "ProductId")
            {
        <div class="form-group">

            <label>@(property.DisplayName ?? property.PropertyName)</label>
            @if (property.PropertyName == "Description")
            {

                @Html.TextArea(property.PropertyName, null, new { @class = "form-control", rows = 5 })
            }
            else
            {
                @Html.TextBox(property.PropertyName, null, new { @class = "form-control" })
            }
            @Html.ValidationMessage(property.PropertyName)
        </div>
            }
        }

        @*<div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.category, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.category, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>*@

        <div class="panel-footer">

            <input type="submit" value="Save" class="btn btn-primary" />
            @Html.ActionLink("Cancel to return to list","Index",null,new { @class = "text-danger" })
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
